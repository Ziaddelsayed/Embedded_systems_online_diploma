/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Ziad El-Sayed
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2024 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

#include "STM32F103xx.h"
#include "STM32F103C6_GPIO_driver.h"


void clock_init()
{
	//enable clock for GPIOA
	RCC_GPIOA_Clock_EN();
	//enable clock for GPIOB
	RCC_GPIOB_Clock_EN();
}
void GPIO_int()
{
	GPIO_pinConfig_t pincfg ;
	//PA1 input HighZ
	pincfg->GPIO_pinNumber = GPIO_PIN_1 ;
	pincfg->GPIO_MODE = GPIO_MODE_INPUT_FLO ;
	MCAL_GPIO_Init(GPIOA, &pincfg);


	//PB1 output push pull mode
	GPIOB_CRL &= ~(0b11<<6);
	GPIOB_CRL |= (0b01<<4);

	//PA13 input HighZ
	GPIOA_CRH &= ~(0b11<<20);
	GPIOA_CRH |= (0b01<<22);

	//PB13 output push pull mode
	GPIOB_CRH |= (0b01<<20);
	GPIOB_CRH &= ~(0b11<<22);

}
void Delay(int x)
{
	unsigned i,j;
	for(i=0 ; i<x ;i++)
		for(j=0 ; j<255 ;j++);

}
int main(void)
{
	clock_init();
	GPIO_int();

	while(1)
	{
		//PA1 connected to external PUR

		if(((GPIOA_IDR & (1<<1))>>1)==0) //press
		{
			GPIOB_ODR ^= 1<<1 ;
			while(((GPIOA_IDR & (1<<1))>>1)==0);//single press
		}
		//PA13 connected to external PDR
		if(((GPIOA_IDR & (1<<13))>>13)==1) //press
		{
			GPIOB_ODR ^= 1<<13 ; //multi press

		}
		Delay(1);

	}

	return 0;

}
